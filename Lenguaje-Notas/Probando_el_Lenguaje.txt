Palabras Calve{
	Nota, Notas, Nota:, Notas:,
	Pendiente, Pendientes, Pendiente:, Pendientes:,
	Solución, Soluciones, Solución:, Soluciones:,
	Command Palette, "Command Palette", #Command Palette#
	VSC, VS Code, VSCode, VS2019, VS 2019, VS 2018, VS2014, VS 2020, VS2020
	C#, C++, CSharp, Csharp, XAML, 
	C#{}C#, C++{}C++, CSharp{}CSharp, XAML{}XAML
	
	command, Command, command=, Command=, "command", "Command",
	when, when=, "when",
}

Símbolos clave {
	//Pongo "|" porque alinié algunas líneas pero no quiero que eso proboque folding.
	| ←, ←-, ←---, ←-----, ←←, ←←←←, ←←←---
	| →, -→, ---→, -----→, →→, →→→→, ---→→→
	| ←→, ←←→, ←→→, ←--→→, →←, →-←
	|   ---
	|  ←---
	|  →---
	|   ---→
	|   ---←
	|  ←---→
	|  →---←
	| →←---→←
	| ←←---→→
	| ←→---←→
	| -→---←-
	| (×)
	| (○), (☺), (☻)
}

Prueba regiones (folding) {
R{
		a
}R Esta línea debiese ocultarse (○)
	---
	R{
			a
	}R Esta línea debiese ocultarse (○)
	--- 0
	R{
		a
	}RNo sé si esta línea debiese ocultarse
	--- 1
	R{
		a
	"No sé si esta línea }R debiese ocultarse" ¡Cierre forzado! }
	--- 2
	R{
		a // }R Esto ¡no! debería cerrar la región. (×)
		¡Clausura forzada! }
		¡Apertura Forzada! R{
	}R
	---
	R{
		R{
			a
		}R Esta línea debiese ocultarse en la región interior (○)
	}R   Esta línea debiese ocultarse en la región exterior (○)
	---
	L{
		1)  sfd
		2)  sfd
		3)  sfd
	}L Esta línea debiese ocultarse (○)
	---
	L{
		1)  sfd
		L{  ¡Apertura Forzada! {
			1.1)	sdf
		}L Esta línea debiese ocultarse en la región interior (○)
	}L   Esta línea debiese ocultarse en la región exterior (○)
	---
	R{
		sfd
		L{
			1)	sdf
		}L Esta línea debiese ocultarse en la región interior (○)
	}R   Esta línea debiese ocultarse en la región exterior (○)
	---
	R{
		a
	}L Esta línea ¡no! debiese ocultarse (×)
	--- 0
	R{
		a
	}A Esta línea ¡no! debiese ocultarse (○)
	--- 1
	R{
		a ¡Esta "Región" está incluyendo los "---n" hasta 7 (no inclusive)!
	} Esta línea debiese ocultarse (○)
	--- 2
	{
		Pruebo que sin la "R" la línea siguiente en efecto no se oculta. ¡Todo esta "Región" quedo dentro de la anterior!
	} Esta línea ¡no! debiese ocultarse (○)
	--- 3
	R{
		a
 } Esta línea ¡no! debiese ocultarse (○)
	--- 4
	A{
		a
	}A Esta línea ¡no! debiese ocultarse (○)
	--- 5
	A{
		a
	}R Esta línea ¡no! debiese ocultarse (○)
	--- 6
	A{
		a
	}L Esta línea ¡no! debiese ocultarse (○)
	--- 7
	R{
		a
			}A Esta línea ¡no! debiese ocultarse (×) (puede que se esté ocultando por la identación)
	--- 8
	R{
		a
 }A Esta línea ¡no! debiese ocultarse (○)
	--- 9
	R{
		a
}A Esta línea ¡no! debiese ocultarse (○)
	--- 10
	R{
		a
	} Esta línea ¡no! debiese ocultarse (○)
	---
	R{
		a {}
		b
	}R Esta línea debiese ocultarse (○)
}

Strings{
	asdg sadf "sdgh " dslñf jñl 'slajf' jñl'slajf' slkdjfsl "sdfj lñd' \" jdslfj lsjf" kjsfsajfl ' \' \skld\fjskdljflk' sjdflñsjfdl" sdjfslñdfj" sldfjñlñj' sldfjlsdjf' sldfjsldfj'
	sdf ' sdfj' sldkjf ' lksjljl " lkdjf' sdfjkl " sadfhlks ' lñsdfj "
}

Números{
	Sin separador de miles{
		¡234.3242!
		¡1_23_4_56.789!
		¡2_5___6_8.89_9_6!
		¡.356!
		¡_!
		¡_2!
		¡3_!
	}
	Con separador de miles{
		¡1,234,567,851!
		¡1,2_4,567,851!
		¡1,23_4,567,851!

	}
	Hexadecimal{
		0xAF, 0xAG, ¡0x8080_AAAA_BB._1!
		0xaf, 0xag, ¡0x8080_aaAa_Bb._1!
	}
	Con Unidades y monetario{
		34º, 34,000º
		34ª, 34,000ª
		34°, 34,000°
		34hs, 34,000Hs
		34', 34,000'
		34min, 34,000MIN
		34'', 34,000''
		34seg, 34,000Seg
		34K, 34,000k
		34Km, 34,000km
		34m, 34,000M
		34l, 34,000L
		34Gb, 34,000GB

		$34, £34
		34$, 34£
	}
}

Ambos: 46 46' 4'56' '46' ¡Cierre forzado! (×)'

Exclamaciones{
  ¡sf}fa!
 _¡sf}fa!, ¡sf}fa!_
 #¡sf}fa!, ¡sf}fa!#
  ¡¡sf}fa!!
 _¡¡sf}fa!!, ¡¡sf}fa!!_
 #¡¡sf}fa!!, ¡¡sf}fa!!#
    ¡!
   ¡¡!!
  ¡¡¡!!!
 ¡¡¡¡!!!!
 ¡¡¡¡!!!! !
 ¡¡¡¡!!!! !!
    ¡!!
   ¡¡!!!!
    ¡¡!
   ¡¡¡¡!!-
  ¡Nota:! ,  ¡sf\! \fa! ,  ¡Nota: \!!  ,  ¡c'sfsg'! ,  ¡¿sadf?! ,  ¡¿sd  ¡asfl!  sf?! , ¡"lajsldflj"!, ¡//sdasdf!, ¡4646!, ¡/*sdfsaf/*sdfsfas*/sadf*/!
 ¡¡Nota:!!, ¡¡sf\!!\fa!!, ¡¡Nota:\!!!!, ¡¡c'sfsg'!!, ¡¡¿sadf?!!, ¡¡¿sd ¡¡asfl!! sf?!!, ¡"lajsldflj"!, ¡//sdasdf!, ¡4646!, ¡/*sdfsaf/*sdfsfas*/sadf*/!
¡¡¡Nota:!!!                                                     ¡¡¿sd  ¡asfl!  sf?!!
  ¿sf}fa?
 _¿sf}fa?, ¿sf}fa?_
 ¿¿sf}fa??
     ¿?
    ¿¿??
   ¿¿¿???
 ¿¿¿¿????
 ¿¿¿¿???? ?
 ¿¿¿¿???? ??
    ¿??
   ¿¿????
    ¿¿?
   ¿¿¿¿??-
  ¿Nota:? ,  ¿sf\? \fa? ,  ¿Nota: \?? ,  ¿c'sfsg'? ,  ¿¡sadf!? ,  ¿¡sd  ¿asfl?  sf!? ,  ¿"lajsldflj"? ,  ¿//sdasdf? , ¿4646?, ¿/*sdfsaf/*sdfsfas*/sadf*/?
 ¿¿Nota:??, ¿¿sf\??\fa??, ¿¿Nota:\????, ¿¿c'sfsg'??, ¿¿¡sadf!??, ¿¿¡sd ¿¿asfl?? sf!??, ¿¿"lajsldflj"??, ¿¿//sdasdf??, ¿4646?, ¿/*sdfsaf/*sdfsfas*/sadf*/?
¿¿¿Nota:???                                                     ¿¿¡sd  ¿asfl?  sf!??
}

Código {

	Código{
		¡Aún no implementado!
	}Código

	XAML{
		<elemento atributo="valor"> //Comentario ¡no propio! de XAML. </elemento>
			Texto
		</elemento>
	}XAML
	
	C#{
		namespace Name{
			class clase1{
				public string e;
				public int i;
				public Int32 i2;
				public void fn(int i, char c){
					i = i2;
					e = i;
					var a = 0; //sdffjsl
					var s = "sdfsaf";
					var s2 = 'sfsadf';
					bool b = false;
				};
			}
		}
		public void Función_Fuera_de_Namespace(){
				string e = "sfg";
		}
		internal class Clase_Fuera_de_Namespace{
			private bool b = true;
		}
	}C#

}

Itemizadores{
!) , ¡)
 ·)
_?) , _ ?) , _?) , ?)_ , ¿) , #) , $)
 (!) , (·) , (¿)
 ¡!) , ¿?)
 ¡ !) , ¿ ?)
 ¡ ?) !) , ¿ !) ?)
 ¡ !) !) , ¿ ?) ?)
 15 •) 15
58) 58) (58)
 9)  9) ( 9)
2.5) 2.5) ( 2.5)
 45.89) 45.89) ( 45.89)
a) a) (a)
 b)   ( b)
 _) (_)
c.d) c.d) (c.d) (c.de)
 c.d)    ( c.d)
 c.de) (c._) (_.d) (c._.2)
}
L{ Listado
	 item1  Descripcion c'sdñjlñ' sdfs.sdfsaf.
	2item		Descripcion Notas:
	Notas:		{[()]}
	#$sldfjlsdjf		Descripcion ¿safdfg?
	()=?=)		Descripcion 'asdfsfd'
	_		Descripcion ¡asdff!
	16546		Descripcion //sdfsdf
	16546)		Descripcion /*
	asdfsdf
	*/
	//dsfsfg
	/*asdfsfd
	asfdsafd
	*/
	 ¿16546?		Descripcion
	¡16546!		Descripcion
	"sdfjg"		Descripcion
	"sdfjg sdfsg"		Descripcion
	'sdfjg sdfsg'		Descripcion  
 }L


Compactos{
  https://gcthesoftwareengineer.com/2017/01/how-to-create-custom-syntax-highlighting-in-a-visual-studio-code-extension/
"C:\Users\jonah\.vscode\" no quiero que esto forme parte del PATH "Agrego más símbolos \""
	"C:\Users\jonah\.vscode" no quiero que esto forme parte del PATH "Agrego más símbolos \""
	"C:\Users\jonah\.vscode\" no quiero que esto forme parte del PATH "Agrego más símbolos \""
	"c:\Users\jonah\.vscode"
	"D:\Users\jonah\.vscode"
	"d:\Users\jonah\.vscode\" Tengo que cerrar el String"
	"Z:\Users\jonah\.vscode"
	"Ñ:\Users\jonah\.vscode"
	".\jonah\.vscode"
	"..\jonah\.vscode"
	".\jonah\.vscode\"
	"..\jonah\.vscode\"
	"...\jonah\.vscode"
}

Comentarios{
	// asd "asd", sf.sff. P'sfsfsf', Ctrl+algo  , "C:\Users\jonah\.vscode\extensions", https://gcthesoftwareengineer.com/2017/01/how-to-create-custom...
	/*
	asd
	/* sldk */
	sdfgh
	// dsafhsdf
	/**/
	*/
}

Operadores{
	12 + 35				12+35				dfg+aab
	14 - 65				14-65				dfg-aab
	45 ++ 978			45++978			dfg++aab
	132 +- 9871		132+-9871		dfg+-aab
	45 * 8				45*8				dfg*aab
	12 / 9				12/9				dfg/aab
	"a" & "b"    "a"&"b"
	'a' & 'b'    'a'&'b'
	12 = 9				12=9				dfg=aab
	'a' = 'b'    'a'='b'
	 12 +=  9      12+=9    12=+9    dfg+=aab
	'a' += 'b'    'a'+='b' 'a'=+'b'
	 12 ==  9      12==9    dfg==aab
	'a' == 'b'    'a'=='b'
}

miembros y tipos{
	abc.abc.abc, abc.abc.abc. abc.abc; abc.abc<abc>, abc<abc>
	.abc.abc.abc, .abc.abc, .abc, .abc., .abc.., ..abc., a.abc
}

Señaladores de tokens R{
	C¨abc.abc.abc¨, C¨abc¨, C¨abc<abc>¨, C¨abc<abc<abc>>¨
	C"abc.abc.abc", C"abc"
	P¨abc¨, P"abc"
	c¨abc¨, c"abc"
	F¨abc¨, F¨abc()¨, F¨asd(dff, sflññ)<sflñdf?s ffsñl¡ dfdsa! #& ¨
	E¨abc¨
	k'abc'
	I¨abc¨
}R

Regex{
	rgx{ asdfg }rgx
}
-----------------------------------------
Atajos{
Win+U	 blabla
	Win+U 	_
	Win+ 	_
	Win+Num Lock. 	_
	Win+cualquier cosa que no use \t o \ {2,} 	_
	Ctrl+sigo con un espacio _
	Ctrl+sigo con un tab	_
	Ctrl+sigo con 2 espacios  _
	_ Win+U	_ Win+U	_
	_ Win+U _ Win+U _
	_ Win+U _ Win+U  _
	!) Win+U	_
	   (+Shift)	_
	   (,+Alt)	_
	!) (+Ctrl)		  Switch to the last active window of the app.
	_"Alt+algo"_
	_"alt+algo 2"_
	_"alt+algo  3"_
	_"alt+algo \" 4"_ Fuerzo cierre string"

F1	    Display Help
    F1	    Display Help
 !) F1	    Display Help
 !) "F1"	    Display Help
}

Formatos fuente {
	Itálica{
		  Comparo
		~¨Comparo¨
		~¨
		  Comparo (no es multilínea)
		¨
		~¨ 1º ita ~¨ 2º ita ¨ quiero cerrar 1º ita ¨
		~¨¿quiero esto como pregunta ¡_! ' quiero esto como string (×) ' a ¨ ? Notas: 456 \¨ \¡sd\¨ff!¨
		¿ df ~¨quiero esto formateado¨ ?
		'quiero esto como string~¨quiero esto como string formateado¨ --', 'quiero esto como string\~¨quiero esto como no string no formateado¨'
		~¨ 'quiero esto como string formateado'¨
	}
	Bold{
		  Comparo
		•¨Comparo¨
		•¨
		  Comparo (sí es multilínea)
		¨
		•¨ 1º bol •¨ 2º bol ¨ quiero cerrar 1º bol ¨ asdfdf
		•¨adfsf ¿quiero esto como pregunta ¡_! ¨ quiero esto como string (×) ' a ¨ ? Notas: 456 \¨ \¡sd\¨ff!¨
		¿ df •¨quiero esto formateado¨ ?
		'quiero esto como string•¨quiero esto como string formateado¨ --', 'quiero esto como string\•¨quiero esto como no string no formateado (×)¨' sdf
		•¨ 'quiero esto como string formateado'¨
	}
	Underline{
		_¨Comparo¨
		_¨
		  Comparo (sí es multilínea)
		¨
		_¨ 1º und _¨ 2º und ¨ quiero cerrar 1º und ¨ sdfsf
		_¨adfsf ¿quiero esto como pregunta ¡_! ¨ quiero esto como string (×) ' a ¨ ? Notas: 456 \¨ \¡sd\¨ff!¨
		¿ df _¨quiero esto formateado¨ ?
		'quiero esto como string_¨quiero esto como string formateado¨ --', 'quiero esto como string\~¨quiero esto como no string no formateado¨ (×)' sdf
		_¨ 'quiero esto como string formateado'¨
	}
	Combinaciones{
		     Comparo
		  ~•¨Comparo¨
		  •~¨Comparo¨
		~¨ •¨Comparo¨ quiero cerrar italic ¨
		•¨ ~¨Comparo¨ quiero cerrar bold   ¨

		  ~_¨Comparo¨
		  _~¨Comparo¨
		~¨ _¨Comparo¨ quiero cerrar italic    ¨
		_¨ ~¨Comparo¨ quiero cerrar underline ¨

		  •_¨Comparo¨
		  _•¨Comparo¨
		•¨ _¨Comparo¨ quiero cerrar bold   ¨
		_¨ •¨Comparo¨ quiero cerrar underline ¨

		 ~•_¨Comparo¨
		~¨ a •¨ b _¨ c ¨ ¨ _~¨ d ¨ •_¨ e ¨ ¨
	}
	Ninguno{
		     Comparo   Comparo
		~•_¨ Comparo -¨Comparo¨ ¨
	}
}

Evitando que una estructura interior cierre una llave{
	"}", ¿}?, ¡}!, '}', /*}*/, /*/*}*/*/, rgx{ } }rgx, //}
}

Pruebas{
	
	Hipótesis sobre capturas en recurción {
		a<b>
		1)
			'  a  '
			' int '
		2)
			'  a   < '
			' int  1 '
			3)
				'  a   <  b  ' mueren "int" anteriores
				' tod  1 int '
			4)
				'  a    <   b  | ' mueren "1", "gen" y "2" anteriores
				' tod  tod int   '
		5)
			'  a    <   b•   ' completo "gen"
			' tod  tod gen   '
		6)
			'  a    <   b• > ' mueren "2" anteriores
			' tod  tod gen 2 ' <- "coincide con lo que se veía"


		a<b<c>>
		1)
			'  a  '
			' int '
		2)
			'  a   < '
			' int  1 '
			3)
				'  a   <  b  ' mueren "int" anteriores
				' tod  1 int '
			4)
				'  a   <   b  < ' mueren "1" anteriores
				' tod tod int 1 '
				5)
					'  a   <   b  <  c  ' mueren "int" anteriores
					' tod tod tod 1 int '
				6)
					'  a   <   b   <   c  | ' mueren "1", "gen" y "2" anteriores
					' tod tod tod tod int   '
			7)
				'  a   <   b   <   c• ' completo "gen"
				' tod tod tod tod gen '
			8)
				'  a   <   b   <   c• > ' mueren "2" anteriores
				' tod tod tod tod gen 2 '
		9)
			'  a   <   b   <   c  >• ' completo "gen". mueren "gen" anteriores
			' tod tod -----gen-----  '
		10)
			'  a   <   b   <   c  >• > ' mueren "2" anteriores
			' tod tod -----gen-----  2 '  <- "¡No! coincide con lo que se veía"
	}
}
